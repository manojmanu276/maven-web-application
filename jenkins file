def sendSlackNotifications(String buildStatus = 'STARTED') {
    
 buildStatus = buildStatus ?: 'SUCCESS'
 
 // Default values
 def colorName = 'RED'
 def colorCode = '#FF0000'
 def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
 def summary = "${subject} (${env.BUILD_URL})"
 
 //Override default values based on build status
 if (buildStatus == 'STARTED') {
     color = 'YELLOW'
     colorCode = '#FFFF00'
 } else if (buildStatus == 'SUCCESS'){
     color = 'GREEN'
     colorCode = '#00FF00'
 }else {
     color = 'RED'
     colorCode = '#FF0000'
 }
 
 // Send notifications
 slackSend (color: colorCode, message: summary)
}

node{
    
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])  
    
def mavenHome= tool name: 'maven3.8.4'
try{
    sendSlackNotifications('STARTED')
  //get the code from Github Repo
stage('checkoutcode'){
    git branch: 'development', credentialsId: '48dde38c-d393-4532-ac68-bbb97e832414', url: 'https://github.com/manojmanu276/maven-web-application.git'
}

//do the build using maven tool
stage('Build'){
    sh "${mavenHome}/bin/mvn clean package"
}
/*
//execute sonar report
stage('ExecuteSonarQubeReport'){
    sh "${mavenHome}/bin/mvn sonar:sonar"
}

//upload artifacts into nexus repository
stage('UploadintoNexus'){
    sh "${mavenHome}/bin/mvn deploy"
}

//deploy to tomcat server
stage('DeployintoTomcat'){
    sshagent(['b8c33ec6-a7dc-4df4-a3c6-aca63dbaf6b1']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.110.160.37:/opt/apache-tomcat-9.0.62/webapps/"
}
} 
*/
}//try closing
  catch(e){
  currentBuild.result = "FAILED"
  }
  finally{
      
sendSlackNotifications(currentBuild.result)
} 
}//node closing
